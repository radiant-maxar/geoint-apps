diff --git a/test/details.js b/test/details.js
index 513dcba..df49e7b 100644
--- a/test/details.js
+++ b/test/details.js
@@ -87,21 +87,6 @@ describe('Details Page', function () {
       });
     }
 
-    it('should change page url on clicking display child places', async function () {
-      let current_url;
-      let [child_places_btn] = await page.$x("//a[contains(text(), 'display child places')]");
-
-      await child_places_btn.evaluate(node => node.click());
-      await page.waitForNavigation();
-      await page.waitForSelector('table#address');
-
-      current_url = new URL(await page.url());
-      assert.strictEqual(current_url.searchParams.get('hierarchy'), '1');
-
-      let page_content = await page.$eval('body', el => el.textContent);
-      assert.ok(page_content.includes('Alte Landstrasse')); // one of the streets
-    });
-
     it('should support case-insenstive search, can navigate to new page', async function () {
       let input_field = await page.$('input[type=edit]');
       await input_field.click({ clickCount: 3 });
@@ -112,27 +97,4 @@ describe('Details Page', function () {
       assert.ok((await page.$eval('.container h1', el => el.textContent)).includes('Taj Mahal'));
     });
   });
-
-  describe('Place without name, keywords, hierarchy', function () {
-    // e.g. a numeric house number
-    before(async function () {
-      page = await browser.newPage();
-      await page.goto('http://localhost:9999/details.html?osmtype=N&osmid=946563004&keywords=1&hierarchy=1');
-      await page.waitForSelector('.container .row');
-    });
-
-    after(async function () {
-      await page.close();
-    });
-
-    it('should display No Name, no keywords, no hierarchy', async function () {
-      let page_content = await page.$eval('body', el => el.textContent);
-
-      assert.ok(page_content.includes('Name No Name'));
-      if (!process.env.REVERSE_ONLY) {
-        assert.ok(page_content.includes('Place has no keywords'));
-      }
-      assert.ok(page_content.includes('Place is not parent of other places'));
-    });
-  });
 });
